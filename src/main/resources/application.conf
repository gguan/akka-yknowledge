akka {
  loglevel = INFO

  actor {
    debug {
      lifecycle = on
    }
  }

  camel {
      # Whether JMX should be enabled or disabled for the Camel Context
      jmx = off
      # enable/disable streaming cache on the Camel Context
      streamingCache = on
      consumer {
        # Configured setting which determines whether one-way communications
        # between an endpoint and this consumer actor
        # should be auto-acknowledged or application-acknowledged.
        # This flag has only effect when exchange is in-only.
        auto-ack = off

        # When endpoint is out-capable (can produce responses) reply-timeout is the
        # maximum time the endpoint can take to send the response before the message
        # exchange fails. This setting is used for out-capable, in-only,
        # manually acknowledged communication.
        reply-timeout = 1m

        # The duration of time to await activation of an endpoint.
        activation-timeout = 10s
      }

      #Scheme to FQCN mappings for CamelMessage body conversions
      conversions {
        "file" = "java.io.InputStream"
      }
  }

}

# Config number of database writer and reader actors
db {
  # config whether use Neo4J or TitanDB(neo4j.rest, neo4j.embedded, titan)
  active = "neo4j.rest"

  batch-size = 10

  titan {
    storage.backend = "cassandra"
    storage.hostname = "127.0.0.1"
    writers = 20
    readers = 20

    list = "type, Entity_alternateKey"
  }

  neo4j {
    rest {
      host = "localhost"
      port = 7474
      path = "/db/data/"
      writers = 1
      readers = 5
    }
    embedded {
      isHA = false
      path = "/usr/local/Cellar/neo4j/2.0.0-M06/libexec/data/graph.db"
      # path = "data/graph.db"
      writers = 1
      readers = 20
    }
  }

  # mandatory attributes input data must support
  mandatory {
    node = "primaryKey"
  }
}

processor {
  dbpedia-person = 20
  node-json = 20
}

http {
  port = 8080
}





